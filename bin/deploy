#!/bin/bash

#
# ARG1 - DEPLOYMENT STATUS
#
function create_deployment {
REQUEST=$(cat <<EOF
  {
    "access_token":"$ROLLBAR_ACCESS_TOKEN",
    "environment":"$SEMAPHORE_SERVER_NAME",
    "revision":"$REVISION",
    "local_username":"$DEPLOY_AUTHOR_NAME",
    "comment":"$TAG",
    "status": "$1"
  }
EOF
)

if [ -n "$ROLLBAR_ACCESS_TOKEN" ]; then
  DEPLOY_ID=$(curl -f --request POST \
     --url https://api.rollbar.com/api/1/deploy/ \
     --data "${REQUEST}") | jq '.data.deploy_id'
fi
return 0
}

#
# ARG1 - DEPLOYMENT STATUS
#
function update_deployment {

REQUEST=$(cat <<EOF
  {
    "access_token":"$ROLLBAR_ACCESS_TOKEN",
    "deploy_id":"$DEPLOY_ID",
    "status": "$1"
  }
EOF
)

if [ -n "$ROLLBAR_ACCESS_TOKEN" ]; then
  curl -f -v --request PATCH \
     --url https://api.rollbar.com/api/1/deploy/ \
     --data "${REQUEST}"
fi
return 0
}

function execute_deployment {
  if [ $? -eq 0 ]; then
    "$CI_DEPLOY_DIR/bin/run-deploy"
    return 0
  fi
  return 1
}

function complete_deployment {
  if [ $DEPLOY_ID -ne 0 ]; then
    update_deployment $1
  else
    create_deployment $1
  fi
}

pushd "$(dirname "$0")/.."
export CI_DEPLOY_DIR="$PWD"
popd

record_deployment 'started'
execute_deployment
retVal=$?
if [ $retVal -ne 0 ]; then
  complete_deployment 'failed'
else
  complete_deployment 'succeeded'
fi
exit $retVal
